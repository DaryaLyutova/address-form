{"version":3,"sources":["context/CurrentAddressContext.js","Components/StepComponent/StepTwo.js","Components/GoogleAddressForm/GoogleAddressForm.js","consts.js","Components/TextField/TextField.js","Components/Button/Button.js","Components/AddressFormCheck/AddressFormCheck.js","Components/AddressText/AddressText.js","Components/StepComponent/StepOne.js","Components/StepComponent/StepComponent.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["CurrentAddressContext","React","createContext","useStyles","makeStyles","theme","formWrapper","marginTop","spacing","marginBottom","gridContainer","alignItems","justifyContent","text","textAlign","StepTwo","currentAddress","useContext","YourChooseAddress","Object","values","filter","element","join","classes","Container","maxWidth","className","Grid","container","item","xs","Typography","GoogleAddressForm","props","initialValues","name","placeholder","as","apiKey","style","width","borderRadius","lineHeight","fontSize","height","margin","padding","color","background","onPlaceSelected","place","savedAddress","options","types","componentRestrictions","country","TextFieldWrapper","otherProps","useField","field","meta","configTextfield","fullWidth","variant","touched","error","helperText","TextField","ButtonWrapper","children","submitForm","useFormikContext","configButton","onClick","Button","AddressFormCheck","FORM_VALIDATION","Yup","shape","postal_code","required","administrative_area","locality","route","street_number","validationSchema","onSubmit","closeForm","handlerSubmite","label","type","AddressText","IconButton","StepOne","handlerClick","onToggle","placeSave","Fragment","NoSsr","defer","placeChange","root","backButton","marginRight","instructions","getStepContent","stepIndex","HorizontalLabelPositionBelowStepper","useState","setPlaceChange","activeStep","setActiveStep","steps","handlerToggleForm","Stepper","alternativeLabel","map","Step","StepLabel","Box","length","every","value","prevActiveStep","App","SetCurrentAddress","setPlaceSave","Provider","address_components","forEach","component","long_name","short_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLACaA,EAAwBC,IAAMC,gB,wFCKrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACTC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,IAEhCE,cAAe,CACXC,WAAY,SACZC,eAAgB,UAEpBC,KAAM,CACFC,UAAW,cA0BJC,EAtBC,WAEZ,IAAMC,EAAiBf,IAAMgB,WAAWjB,GAClCkB,EAAoBC,OAAOC,OAAOJ,GAAgBK,QAAO,SAAAC,GAAO,OAAoB,MAAbA,KAAmBC,KAAK,MAE/FC,EAAUrB,IAEhB,OACI,cAACsB,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,qBAAKC,UAAWH,EAAQlB,YAAxB,SACI,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAGmB,UAAWH,EAAQd,cAA/C,SACI,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,eAACC,EAAA,EAAD,CAAYL,UAAWH,EAAQX,KAA/B,qEACKK,c,0BCYde,MAvCf,SAA2BC,GAEzB,IAAMlB,EAAiBf,IAAMgB,WAAWjB,GAOxC,OACE,cAAC,IAAD,CAAQmC,cAAe,CAAEnB,kBAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEoB,KAAK,UACLC,YAAY,4EACZC,GAAG,QACHC,OCtBM,0CDuBNC,MAAO,CACLC,MAAO,QACPC,aAAc,MACdC,WAAY,WACZC,SAAU,WACVC,OAAQ,WACRC,OAAQ,EACRC,QAAS,cACTC,MAAO,sBACPC,WAAY,QAEdC,gBAxBqB,SAACC,GAC5BjB,EAAMkB,aAAaD,IAwBbE,QAAS,CACPC,MAAO,CAAC,WACRC,sBAAuB,CAAEC,QAAS,c,kCEZ/BC,EArBU,SAAC,GAA2B,IAA1BrB,EAAyB,EAAzBA,KAASsB,EAAgB,wBAEhD,EAAsBC,YAASvB,GAA/B,mBAAOwB,EAAP,KAAcC,EAAd,KAEMC,EAAe,uCACdF,GACAF,GAFc,IAGjBK,WAAW,EACXC,QAAS,aAQb,OALIH,GAAQA,EAAKI,SAAWJ,EAAKK,QAC7BJ,EAAgBI,OAAQ,EACxBJ,EAAgBK,WAAaN,EAAKK,OAIlC,cAACE,EAAA,EAAD,eAAeN,KCSRO,EA1BO,SAAC,GAGhB,IAFLC,EAEI,EAFJA,SAGQC,GADJ,4BACmBC,cAAfD,YAMFE,EAAe,CACnBT,QAAS,YACThB,MAAO,UACPe,WAAW,EACXW,QARmB,WACnBH,MAUF,OACE,cAACI,EAAA,EAAD,2BACMF,GADN,aAGGH,MCyEQM,EA1FU,SAAC1C,GAEtB,IAAMlB,EAAiBf,IAAMgB,WAAWjB,GAElC6E,EAAkBC,MAAaC,MAAM,CACvCC,YAAaF,MACRG,SAAS,uJACdzB,QAASsB,MACJG,SAAS,uJACdC,oBAAqBJ,MAChBG,SAAS,uJACdE,SAAUL,MACLG,SAAS,uJACdG,MAAON,MACFG,SAAS,uJACdI,cAAeP,MACVG,SAAS,yJAQlB,OACI,cAAC,IAAD,CACI9C,cAAenB,EACfsE,iBAAkBT,EAClBU,SAAU,SAAAnE,IATK,SAACA,GACpBc,EAAMqD,SAASnE,GACfc,EAAMsD,YAQEC,CAAerE,IAJvB,SAMI,cAAC,IAAD,UAEI,eAACQ,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UAEI,cAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CACIK,KAAK,UACLsD,MAAM,2CAId,cAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CACIK,KAAK,sBACLsD,MAAM,iFAId,cAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CACIK,KAAK,WACLsD,MAAM,qCAId,cAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CACIK,KAAK,QACLsD,MAAM,qCAId,cAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CACIK,KAAK,gBACLsD,MAAM,sCAId,cAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CACIK,KAAK,cACLsD,MAAM,2CAId,cAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,CAAQ4D,KAAK,SAAb,8E,2BChFlBxF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCK,cAAe,CACXC,WAAY,SACZC,eAAgB,SAChBL,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,QAyBrBoF,EArBK,SAAC1D,GAEjB,IAAMV,EAAUrB,IAEVa,EAAiBf,IAAMgB,WAAWjB,GAClCkB,EAAoBC,OAAOC,OAAOJ,GAAgBK,QAAO,SAAAC,GAAO,OAAoB,MAAbA,KAAmBC,KAAK,MAErG,OACI,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAGmB,UAAWH,EAAQd,cAA/C,UACI,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,2DAAuBd,OAE3B,cAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC8D,EAAA,EAAD,CAAYnB,QAASxC,EAAMwC,QAA3B,SACI,cAAC,IAAD,CAAY9B,SAAS,kBCtBnCzC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,QAiCjBsF,EA7BC,SAAC5D,GAEf,IAAMV,EAAUrB,IAEV4F,EAAe,WACnB7D,EAAM8D,YAGR,OACE,sBAAKrE,UAAWH,EAAQlB,YAAxB,UACE,cAAC,EAAD,CAAmB8C,aAAclB,EAAMkB,eACtClB,EAAM+D,UACL,cAAC,IAAMC,SAAP,UACE,cAACC,EAAA,EAAD,CAAOC,MAAOlE,EAAM+D,UAApB,SACE,cAAC,EAAD,CAAavB,QAASqB,QAGxB,KACH7D,EAAMmE,YACL,cAAC,IAAMH,SAAP,UACE,cAACC,EAAA,EAAD,CAAOC,MAAOlE,EAAMmE,YAApB,SACE,cAAC,EAAD,CAAkBd,SAAUrD,EAAMqD,SAAUC,UAAWO,QAGzD,SC/BJ5F,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiG,KAAM,CACF7D,MAAO,QAEX8D,WAAY,CACRC,YAAanG,EAAMG,QAAQ,IAE/BiG,aAAc,CACVlG,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,GAC5BM,UAAW,cAQnB,SAAS4F,EAAeC,GACpB,OAAQA,GACJ,KAAK,EACD,MAAO,kFACX,KAAK,EACD,MAAO,yIACX,QACI,MAAO,qBAIJ,SAASC,EAAoC1E,GAExD,IAAMV,EAAUrB,IAEVa,EAAiBf,IAAMgB,WAAWjB,GAClCkB,EAAoBC,OAAOC,OAAOJ,GACxC,EAAsCf,IAAM4G,UAAS,GAArD,mBAAOR,EAAP,KAAoBS,EAApB,KACA,EAAoC7G,IAAM4G,SAAS,GAAnD,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMC,EAvBC,CAAC,kFAAkB,0IAqCpBC,EAAoB,WACtBJ,GAAgBT,IAGpB,OACI,sBAAK1E,UAAWH,EAAQ8E,KAAxB,UACI,cAACa,EAAA,EAAD,CAASJ,WAAYA,EAAYK,kBAAgB,EAAjD,SACKH,EAAMI,KAAI,SAAC3B,GAAD,OACP,cAAC4B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,KADO7B,QAKnB,cAAC8B,EAAA,EAAD,UACKT,IAAeE,EAAMQ,OAClB,eAACD,EAAA,EAAD,WACI,cAACxF,EAAA,EAAD,CAAYL,UAAWH,EAAQiF,aAAczC,QAAQ,KAArD,SAA2D0C,EAAeK,EAAa,KACvF,cAAC,EAAD,IACA,cAACpC,EAAA,EAAD,CACIX,QAAQ,YACRhB,MAAM,UACN0B,QAzBJ,WAChBsC,EAAc,IAqBE,4GAQJ,eAACQ,EAAA,EAAD,WACI,cAACxF,EAAA,EAAD,CAAYL,UAAWH,EAAQiF,aAAczC,QAAQ,KAArD,SAA2D0C,EAAeK,KAC1E,cAAC,EAAD,CACI3D,aAAclB,EAAMkB,aACpB6C,UAAW/D,EAAM+D,UACjBD,SAAUkB,EACVb,YAAaA,EACbd,SAAUrD,EAAMqD,WACpB,8BACI,cAACZ,EAAA,EAAD,CACIX,QAAQ,YACRhB,MAAM,UACN0B,QAlDT,WACXxD,EAAkBwG,OAAM,SAAAC,GAAK,OAAIA,KACjCX,GAAc,SAACY,GAAD,OAAoBA,EAAiB,KAEnDV,KA2CgB,4BCnBbW,MAtEf,WAEE,MAA4C5H,IAAM4G,SAAS,CACzD7B,YAAa,GACbxB,QAAS,GACT0B,oBAAqB,GACrBC,SAAU,GACVC,MAAO,GACPC,cAAe,KANjB,mBAAOrE,EAAP,KAAuB8G,EAAvB,KAQA,EAAkC7H,IAAM4G,UAAS,GAAjD,mBAAOZ,EAAP,KAAkB8B,EAAlB,KA6CA,OACE,cAAC/H,EAAsBgI,SAAvB,CAAgCL,MAAO3G,EAAvC,SAEE,cAACS,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,EAAD,CACE0B,aAhDa,SAACD,GAkCpB,OAjCA4E,GAAa,GACb5E,EAAM8E,mBAAmBC,SAAQ,SAACC,GAEhC,OADsBA,EAAU7E,MAAM,IAEpC,IAAK,gBACH,OAAOwE,EACL9G,EAAeqE,cAAgB8C,EAAUC,WAE7C,IAAK,QACH,OAAON,EACL9G,EAAeoE,MAAQ+C,EAAUE,YAErC,IAAK,cACH,OAAOP,EACL9G,EAAegE,YAAcmD,EAAUC,WAE3C,IAAK,WACH,OAAON,EACL9G,EAAemE,SAAWgD,EAAUC,WAExC,IAAK,8BACH,OAAON,EACL9G,EAAekE,oBAAsBiD,EAAUE,YAEnD,IAAK,UACH,OAAOP,EACL9G,EAAewC,QAAU2E,EAAUC,WAGvC,QACE,OAAOpH,MAGN8G,EAAkB,eACpB9G,KAcCiF,UAAWA,EACXV,SAXR,SAAkBnE,GAChB0G,EAAkB1G,WC7CPkH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f013a7a9.chunk.js","sourcesContent":["import React from 'react';\r\nexport const CurrentAddressContext = React.createContext();","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CurrentAddressContext } from '../../context/CurrentAddressContext';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formWrapper: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(8),\r\n    },\r\n    gridContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nconst StepTwo = () => {\r\n\r\n    const currentAddress = React.useContext(CurrentAddressContext);\r\n    const YourChooseAddress = Object.values(currentAddress).filter(element => !!(element) === true).join(', ');\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <div className={classes.formWrapper}>\r\n                <Grid container spacing={9} className={classes.gridContainer}>\r\n                    <Grid item xs={12}>\r\n                        <Typography className={classes.text}>Вы выбрали:\r\n                            {YourChooseAddress}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default StepTwo;","import React from 'react';\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport { Formik, Form } from 'formik';\r\nimport API_KEY from '../../consts';\r\nimport { CurrentAddressContext } from '../../context/CurrentAddressContext';\r\n\r\nfunction GoogleAddressForm(props) {\r\n\r\n  const currentAddress = React.useContext(CurrentAddressContext);\r\n\r\n  const handlerPlaceSelected = (place) => {\r\n    props.savedAddress(place);\r\n  }\r\n\r\n\r\n  return (\r\n    <Formik initialValues={{ currentAddress }}>\r\n      <Form>\r\n        <Autocomplete\r\n          name=\"address\"\r\n          placeholder=\"Введите адрес\"\r\n          as=\"input\"\r\n          apiKey={API_KEY}\r\n          style={{\r\n            width: \"524px\",\r\n            borderRadius: \"4px\",\r\n            lineHeight: \"1.1876em\",\r\n            fontSize: \"1.1876em\",\r\n            height: \"1.1876em\",\r\n            margin: 0,\r\n            padding: \"18.5px 14px\",\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            background: \"none\"\r\n          }}\r\n          onPlaceSelected={handlerPlaceSelected}\r\n          options={{\r\n            types: [\"address\"],\r\n            componentRestrictions: { country: \"ru\" },\r\n          }}\r\n        />\r\n      </Form>\r\n    </Formik >\r\n  );\r\n}\r\n\r\nexport default GoogleAddressForm;\r\n","const API_KEY = 'AIzaSyDfcaW_obGfqFyWeLbTXOQnR3rGtO-D6bY';\r\n\r\nexport default API_KEY;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport {useField} from 'formik'\r\n\r\nconst TextFieldWrapper = ({name, ...otherProps}) => {\r\n    \r\n    const [field, meta] = useField(name);\r\n\r\n    const configTextfield ={\r\n        ...field,\r\n        ...otherProps,\r\n        fullWidth: true,\r\n        variant: 'outlined'\r\n    };\r\n\r\n    if (meta && meta.touched && meta.error) {\r\n        configTextfield.error = true;\r\n        configTextfield.helperText = meta.error;\r\n    };\r\n    \r\n    return (\r\n        <TextField {...configTextfield} />\r\n    )\r\n}\r\n\r\nexport default TextFieldWrapper;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { useFormikContext } from 'formik';\r\n\r\nconst ButtonWrapper = ({\r\n  children,\r\n  ...otherProps\r\n}) => {\r\n  const { submitForm } = useFormikContext();\r\n\r\n  const handleSubmit = () => {\r\n    submitForm();\r\n  }\r\n\r\n  const configButton = {\r\n    variant: 'contained',\r\n    color: 'primary',\r\n    fullWidth: true,\r\n    onClick: handleSubmit\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      {...configButton}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonWrapper;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport * as Yup from 'yup';\r\nimport { CurrentAddressContext } from '../../context/CurrentAddressContext';\r\nimport TextField from '../TextField/TextField';\r\nimport Button from '../Button/Button';\r\n\r\nconst AddressFormCheck = (props) => {\r\n\r\n    const currentAddress = React.useContext(CurrentAddressContext);\r\n\r\n    const FORM_VALIDATION = Yup.object().shape({\r\n        postal_code: Yup.number()\r\n            .required('*обязательно для заполнения'),\r\n        country: Yup.string()\r\n            .required('*обязательно для заполнения'),\r\n        administrative_area: Yup.string()\r\n            .required('*обязательно для заполнения'),\r\n        locality: Yup.string()\r\n            .required('*обязательно для заполнения'),\r\n        route: Yup.string()\r\n            .required('*обязательно для заполнения'),\r\n        street_number: Yup.string()\r\n            .required('*обязательно для заполнения'),\r\n    });\r\n\r\n    const handlerSubmite = (values) => {\r\n        props.onSubmit(values);\r\n        props.closeForm();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={currentAddress}\r\n            validationSchema={FORM_VALIDATION}\r\n            onSubmit={values => {\r\n                handlerSubmite(values);\r\n            }}>\r\n            <Form>\r\n\r\n                <Grid container spacing={2}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            name=\"country\"\r\n                            label=\"Страна\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            name=\"administrative_area\"\r\n                            label=\"Область, район\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            name=\"locality\"\r\n                            label=\"Город\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            name=\"route\"\r\n                            label=\"Улица\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name=\"street_number\"\r\n                            label=\"№ дома\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name=\"postal_code\"\r\n                            label=\"Индекс\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button type=\"submit\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddressFormCheck;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, IconButton } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { CurrentAddressContext } from '../../context/CurrentAddressContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nconst AddressText = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const currentAddress = React.useContext(CurrentAddressContext);\r\n    const YourChooseAddress = Object.values(currentAddress).filter(element => !!(element) === true).join(', ');\r\n\r\n    return (\r\n        <Grid container spacing={2} className={classes.gridContainer}>\r\n            <Grid item xs={9}>\r\n                <Typography>Вы ввели: {YourChooseAddress}</Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <IconButton onClick={props.onClick}>\r\n                    <CreateIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddressText;","import React from 'react';\r\nimport GoogleAddressForm from '../GoogleAddressForm/GoogleAddressForm';\r\nimport { NoSsr } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddressFormCheck from '../AddressFormCheck/AddressFormCheck';\r\nimport AddressText from '../AddressText/AddressText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formWrapper: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst StepOne = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const handlerClick = () => {\r\n    props.onToggle();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.formWrapper}>\r\n      <GoogleAddressForm savedAddress={props.savedAddress} />\r\n      {props.placeSave ? (\r\n        <React.Fragment>\r\n          <NoSsr defer={props.placeSave}>\r\n            <AddressText onClick={handlerClick} />\r\n          </NoSsr>\r\n        </React.Fragment>\r\n      ) : null}\r\n      {props.placeChange ? (\r\n        <React.Fragment>\r\n          <NoSsr defer={props.placeChange}>\r\n            <AddressFormCheck onSubmit={props.onSubmit} closeForm={handlerClick} />\r\n          </NoSsr>\r\n        </React.Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepOne;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Stepper, Step, StepLabel, Button, Typography, Box } from '@material-ui/core';\r\nimport { CurrentAddressContext } from '../../context/CurrentAddressContext';\r\nimport StepTwo from './StepTwo';\r\nimport StepOne from './StepOne';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Введите адресс', 'Данные успешно сохранены'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n    switch (stepIndex) {\r\n        case 0:\r\n            return 'Введите адресс';\r\n        case 1:\r\n            return 'Данные успешно сохранены';\r\n        default:\r\n            return 'Unknown stepIndex';\r\n    }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const currentAddress = React.useContext(CurrentAddressContext);\r\n    const YourChooseAddress = Object.values(currentAddress);\r\n    const [placeChange, setPlaceChange] = React.useState(false);\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    \r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        if (YourChooseAddress.every(value => value)) {\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 2);\r\n        } else {\r\n            handlerToggleForm();\r\n        }\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handlerToggleForm = () => {\r\n        setPlaceChange(!placeChange);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} alternativeLabel>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel />\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <Box>\r\n                {activeStep === steps.length ? (\r\n                    <Box>\r\n                        <Typography className={classes.instructions} variant=\"h5\">{getStepContent(activeStep - 1)}</Typography>\r\n                        <StepTwo />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleReset}>\r\n                            Внести изменения\r\n                                </Button>\r\n                    </Box>\r\n                ) : (\r\n                    <Box>\r\n                        <Typography className={classes.instructions} variant=\"h5\">{getStepContent(activeStep)}</Typography>\r\n                        <StepOne\r\n                            savedAddress={props.savedAddress}\r\n                            placeSave={props.placeSave}\r\n                            onToggle={handlerToggleForm}\r\n                            placeChange={placeChange}\r\n                            onSubmit={props.onSubmit} />\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                            >Next\r\n                            </Button>\r\n                        </div>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport { CurrentAddressContext } from '../../context/CurrentAddressContext';\nimport { Container } from '@material-ui/core';\nimport StepComponent from '../StepComponent/StepComponent';\n\nfunction App() {\n\n  const [currentAddress, SetCurrentAddress] = React.useState({\n    postal_code: '',\n    country: '',\n    administrative_area: '',\n    locality: '',\n    route: '',\n    street_number: '',\n  });\n  const [placeSave, setPlaceSave] = React.useState(false);\n\n  const savedAddress = (place) => {\n    setPlaceSave(true)\n    place.address_components.forEach((component) => {\n      const componentType = component.types[0];\n      switch (componentType) {\n        case \"street_number\":\n          return SetCurrentAddress(\n            currentAddress.street_number = component.long_name\n          )\n        case \"route\":\n          return SetCurrentAddress(\n            currentAddress.route = component.short_name\n          )\n        case \"postal_code\":\n          return SetCurrentAddress(\n            currentAddress.postal_code = component.long_name\n          )\n        case \"locality\":\n          return SetCurrentAddress(\n            currentAddress.locality = component.long_name\n          )\n        case \"administrative_area_level_1\":\n          return SetCurrentAddress(\n            currentAddress.administrative_area = component.short_name\n          )\n        case \"country\": {\n          return SetCurrentAddress(\n            currentAddress.country = component.long_name\n          )\n        }\n        default:\n          return currentAddress;\n      };\n    });\n    return SetCurrentAddress({\n      ...currentAddress\n    });\n  };\n\n  function onSubmit(values) {\n    SetCurrentAddress(values);\n  }\n\n  return (\n    <CurrentAddressContext.Provider value={currentAddress}>\n\n      <Container maxWidth=\"sm\">\n        <StepComponent\n          savedAddress={savedAddress}\n          placeSave={placeSave}\n          onSubmit={onSubmit}\n        />\n      </Container>\n\n    </CurrentAddressContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}